buildscript {
    repositories {
    	jcenter()
		maven {
			name = "SpongePowered"
			url  = "https://repo.spongepowered.org/repository/maven-public/"
		}
		maven {
			url = "https://files.minecraftforge.net/maven"
		}
    }
    dependencies {
    	classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'eclipse'
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"

version = '1.0.0'
group = 'mod.hitlerhax'
archivesBaseName = 'hitlerhax'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version  = "1.12.2-14.23.5.2768"
	runDir   = "run"
	coreMod  = "mod.hitlerhax.mixin.HtlrMixinLoader"
	mappings = "stable_39"
	makeObfSourceJar = false
}

repositories {
	jcenter()
	maven {
		name = "spongepowered-repo"
		url  = "https://repo.spongepowered.org/maven/"
	}
	maven {
		name = "swt-repo"
		url  = "https://maven-eclipse.github.io/maven"
	}
	maven { url "https://jitpack.io" }
	mavenCentral()
}

dependencies {
	compile 'com.github.zeromemes:Alpine:1.9'
    // compile group: 'net.jodah', name: 'typetools', version: '0.6.3'
	compile group: 'com.squareup.okhttp', name: 'okhttp', version: '2.7.5'
	compile("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
		exclude module: "launchwrapper"
		exclude module: "commons-io"
		exclude module: "guava"
		exclude module: "gson"
		exclude module: 'log4j-core'
	}
	compile 'club.minnced:java-discord-rpc:2.0.2'
}

shadowJar {
	dependencies {
		include(dependency('club.minnced:java-discord-rpc:2.0.2'))
		include(dependency('com.github.zeromemes:Alpine:1.9'))
		// include(dependency("net.jodah:typetools"))
		include(dependency("org.javassist:javassist"))
		include(dependency("org.spongepowered:mixin"))
	}
    exclude 'dummyThing', 'LICENSE.txt', 'org/**/*.html', 'META-INF/maven/**' // Removes unneeded files that are legit just useless text files.
}

mixin {
	defaultObfuscationEnv searge
	add sourceSets.main, "mixins.hitlerhax.refmap.json"
}

reobf {
	shadowJar {
		mappingType = 'SEARGE'
		classpath   = sourceSets.main.compileClasspath
	}
}

jar.finalizedBy('reobfJar') 

processResources {
	inputs.property "version",   project.version
	inputs.property "mcversion", project.minecraft.version

	from (sourceSets.main.resources.srcDirs) {
		include "mcmod.info"

		expand "version" : project.version, "mcversion" : project.minecraft.version
	}

	from (sourceSets.main.resources.srcDirs) {
		exclude "mcmod.info"
	}

	rename "(.+_at.cfg)", 'META-INF/$1'
}

//comment the section below when running the client in development environment

jar {
	manifest {
		attributes (
			"FMLCorePluginContainsFMLMod" : "true",
			"ForceLoadAsMod"              : "true",
			"FMLCorePlugin"               : "mod.hitlerhax.mixin.HtlrMixinLoader",
			"MixinConfigs"                : "mixins.hitlerhax.json",
			"tweakClass"                  : "org.spongepowered.asm.launch.MixinTweaker",
			"TweakOrder"                  : 0,
			"FMLAT"                       : "hitlerhax_at.cfg"
		)
	}
}

build.dependsOn(shadowJar)